#!/bin/bash

# based on https://www.raspberrypi.org/forums/viewtopic.php?f=37&t=47466&sid=42448fa05da78d6e2ceb9670c317a2c8
#put it in rc.local to start running at boot

#Global VARS:
#AC:72:89:2F:3E:D7	antonis-laptop
#F4:7D:EF:4C:AF:BF	Galaxy S10
device="F4:7D:EF:4C:AF:BF"
#device="AC:72:89:2F:3E:D7"
btconnected=0
btcurrent=-1
counter=0
notconnected="0"
connected="1"
rssi=-1

max_consecutive_notconnected=8
notconnected_count=0
max_consecutive_low_rssi=5
max_consecutive_high_rssi=5
low_rssi_count=0
high_rssi_count=0
rssi_threshold=-25
#it looks like if sleep_secs > 3 rpi can never connect to my mobile phone (i.e. rfcomm connect).
sleep_secs=3

dbg_pipe=/tmp/toggle-motion-srvc-dbg

function dbg_write {
	if [[ ! -p $dbg_pipe ]]; then
	    mkfifo $dbg_pipe
	fi
	echo "$1" > $dbg_pipe
}

#motion_srvc_started=0
#changed var to function
function motion_srvc_started {
	/usr/sbin/service  motion status | /bin/grep running >/dev/null 2>&1
}

#example how to call in if statement
#if motion_srvc_started; then
#	echo "Motion service started"
#else
#	echo "Motion service stopped"
#fi


#Command loop:
while [ 1 ]; do

cmdout=$(/usr/bin/hcitool rssi $device)
btcurrent=$(echo $cmdout | /bin/grep -c "RSSI return value") 2> /dev/null
rssi=$(echo $cmdout | /bin/sed -e 's/RSSI return value: //g')

if [ $btcurrent = $notconnected ]; then
	if [ $notconnected_count -lt $max_consecutive_notconnected ]; then
		((notconnected_count=notconnected_count+1))
	fi
        msg="Attempting connection..."
        echo "$msg"
        dbg_write "$msg"
        /usr/bin/rfcomm connect 0 $device 1 2> /dev/null >/dev/null &
        /bin/sleep 1	#wait 1 sec for rfcomm to establish connection
fi

if [ $btcurrent = $connected ]; then
        msg="Device connected. RSSI: $rssi"
        echo "$msg"
        dbg_write "$msg"

	if [[ $rssi -le $rssi_threshold ]]; then
		high_rssi_count=0
		((low_rssi_count=low_rssi_count+1))
		dbg_write "rssi <= $rssi_threshold, low_rssi_count: $low_rssi_count, high_rssi_count: 0"
	else
		low_rssi_count=0
		((high_rssi_count=high_rssi_count+1))
		dbg_write "rssi > $rssi_threshold, high_rssi_count: $high_rssi_count, low_rssi_count: 0"
		if motion_srvc_started && [[ $high_rssi_count -ge $max_consecutive_high_rssi ]]; then
			#motion_srvc_started=0
			msg="Stopping motion service because RSSI is now strong"
			echo "$msg"
			dbg_write "$msg"

			/usr/bin/logger "$msg"
			/usr/sbin/service motion stop
		fi
	fi
	notconnected_count=0
fi

if ! motion_srvc_started; then
	if [[ $low_rssi_count -ge $max_consecutive_low_rssi ]]; then
		#motion_srvc_started=1
		low_rssi_count=0
		msg="Starting motion service because of many low RSSI"
		echo "$msg"
		dbg_write "$msg"
		/usr/bin/logger "$msg"
		/usr/sbin/service motion start
	fi

	if [[ $notconnected_count -ge $max_consecutive_notconnected ]]; then
		#motion_srvc_started=1
		high_rssi_count=0
		msg="Starting motion service because of many notconnected"
		echo "$msg"
		dbg_write "$msg"
		/usr/bin/logger "$msg"
		/usr/sbin/service motion start
	fi
fi


if [ $btconnected -ne $btcurrent ]; then
        if [ $btcurrent -eq 0 ]; then
                msg="GONE!"
                echo "$msg"
		dbg_write "$msg"
        fi
        if [ $btcurrent -eq 1 ]; then
                msg="HERE!"
                echo "$msg"
		dbg_write "$msg"
        fi
        btconnected=$btcurrent
fi



/bin/sleep $sleep_secs

done

